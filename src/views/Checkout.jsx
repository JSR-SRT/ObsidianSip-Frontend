import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { coffeeData } from "../mock/coffeeData"; // Import mock data

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Component ‡∏ä‡∏∑‡πà‡∏≠ Checkout ‡πÄ‡∏õ‡πá‡∏ô function
export const Checkout = () => {
  const navigate = useNavigate();

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Mock Data ‡∏Ç‡∏≠‡∏á User Profile (‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà)
  const userProfileData = {
    firstName: "Arm",
    lastName: "JS",
    phoneNumber: "081-123-4567",
    email: "arm.js@example.com",
    savedAddress: "123/45 ‡∏ã‡∏≠‡∏¢‡∏Å‡∏≤‡πÅ‡∏ü ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÄ‡∏Ç‡∏ï‡∏ß‡∏±‡∏í‡∏ô‡∏≤ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110",
  };

  // --- ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® State ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Checkout ---

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (basket)
  // ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å coffeeData ‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î quantity ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 1
  const [basket, setBasket] = useState(
    coffeeData.map((item) => ({ ...item, quantity: 1 }))
  );
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (dinein, pickup, delivery) ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô "dinein"
  const [orderMethod, setOrderMethod] = useState("dinein");
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Use saved details" ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô "saved"
  const [profileChoice, setProfileChoice] = useState("saved");
  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "Use saved address" ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô "saved"
  const [addressChoice, setAddressChoice] = useState("saved");
  // state ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏µ First Name, Last Name ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å profile
  const [customerInfo, setCustomerInfo] = useState({
    firstName: userProfileData.firstName, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô firstName ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á
    lastName: userProfileData.lastName, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô lastName ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á
    phoneNumber: userProfileData.phoneNumber,
    email: userProfileData.email,
  });
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á Delivery Address ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô profile
  const [deliveryAddress, setDeliveryAddress] = useState(
    userProfileData.savedAddress
  );
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
  const [timeNote, setTimeNote] = useState({
    time: "In 15 minutes",
    note: "",
  });
  // --- ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞ State ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì ---
  const deliveryFee = 40;
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á)
  const [subtotal, setSubtotal] = useState(0);

  // --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ ---

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleQuantityChange: ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
  const handleQuantityChange = (itemId, newQuantity) => {
    setBasket(
      (
        prevBasket // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state basket ‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡πà‡∏≤ (prevBasket)
      ) =>
        prevBasket.map(
          (
            item // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤ item ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
          ) =>
            item.id === itemId
              ? { ...item, quantity: Number(newQuantity) } // ‡∏ñ‡πâ‡∏≤ item.id ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö itemId ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤ ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á object ‡πÉ‡∏´‡∏°‡πà ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏Ñ‡πà quantity
              : item // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á ‡∏Å‡πá‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ item ‡πÄ‡∏î‡∏¥‡∏°
        )
    );
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
  const handleRemoveItem = (itemId) => {
    // ‡πÉ‡∏ä‡πâ filter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ item ‡∏ó‡∏µ‡πà id ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö itemId ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö
    setBasket((prevBasket) => prevBasket.filter((item) => item.id !== itemId));
  };

  // ‡πÉ‡∏ä‡πâ useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏° Customer Info ‡πÅ‡∏•‡∏∞ address ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
  useEffect(() => {
    // Logic ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Customer Info ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô field
    if (profileChoice === "saved") {
      setCustomerInfo({
        firstName: userProfileData.firstName,
        lastName: userProfileData.lastName,
        phoneNumber: userProfileData.phoneNumber,
        email: userProfileData.email,
      });
    } else {
      setCustomerInfo({
        firstName: "",
        lastName: "",
        phoneNumber: "",
        email: "",
      });
    }
  }, [profileChoice]); // Dependency array: useEffect ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ profileChoice ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

  // Logic ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Delivery Address ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô field
  useEffect(() => {
    if (addressChoice === "saved") {
      setDeliveryAddress(userProfileData.savedAddress);
    } else {
      setDeliveryAddress("");
    }
  }, [addressChoice]); // Dependency array: useEffect ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ addressChoice ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

  // useEffect Hook: ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° (subtotal) ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà basket ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  useEffect(() => {
    const calculatedSubtotal = basket.reduce(
      (sum, item) => sum + item.price * item.quantity,
      // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (basket) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      0 // ‡∏ô‡∏≥‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (sum) ‡∏°‡∏≤‡∏ö‡∏ß‡∏Å‡∏Å‡∏±‡∏ö (‡∏£‡∏≤‡∏Ñ‡∏≤ * ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô) ‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô
    );
    setSubtotal(calculatedSubtotal); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state subtotal ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ
  }, [basket]); // Dependency array: useEffect ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô basket ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleConfirm: ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "Place Order"
  const handleConfirm = (event) => {
    event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ reload ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ‡πÄ‡∏°‡∏∑‡πà‡∏≠ form ‡∏ñ‡∏π‡∏Å submit

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (finalTotal) ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "delivery" ‡πÉ‡∏´‡πâ‡∏ö‡∏ß‡∏Å‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°
    const finalTotal =
      orderMethod === "delivery" ? subtotal + deliveryFee : subtotal;

    // ‡πÉ‡∏ä‡πâ navigate ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á "/OrderConfirmation"
    navigate("/order-confirmation", {
      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ OrderConfirmation ‡∏ú‡πà‡∏≤‡∏ô state
      state: {
        basket: basket, // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• basket ‡πÑ‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏Å‡πâ‡∏≠‡∏ô
        subtotal, // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        shipping: orderMethod === "delivery" ? deliveryFee : 0, // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á (‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà delivery)
        total: finalTotal, // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        customer: customerInfo, // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
        address: orderMethod === "delivery" ? deliveryAddress : "N/A",
        note: timeNote.note, // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
      },
    });
  };

  // --- ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô JSX ---

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Checkout
  const finalTotal =
    orderMethod === "delivery" ? subtotal + deliveryFee : subtotal;

  // --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á JSX (‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏Ç‡∏≠‡∏á Component) ---
  return (
    // Container ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á Component
    <div className="bg-[url('/bg-coffee-cookie.jpg')] bg-cover bg-no-repeat bg-center bg-fixed min-h-screen px-4 py-10">
      {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Place Order ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å handleConfirm */}
      <form
        onSubmit={handleConfirm}
        className="max-w-4xl mx-auto bg-[#fcfbfa] rounded-2xl shadow-lg p-4 sm:p-6 space-y-6"
      >
        {/* ‡πÅ‡∏ñ‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Checkout */}
        <div className="bg-[#472C03] py-4 px-4 rounded-lg space-y-2">
          <h1 className="text-2xl sm:text-3xl font-bold text-[#F5F2EC] text-center">
            üõí Checkout
          </h1>
        </div>

        {/* Order Summary Section */}
        <div>
          <h2 className="text-lg sm:text-xl font-semibold mb-2">
            üßæ Order Summary
          </h2>
          <div className="bg-[#F5F2EC] p-4 rounded-lg space-y-2">
            <ul className="space-y-1">
              {/* ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô‡πÉ‡∏ô basket */}
              {basket.map((item) => (
                <li
                  // key ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö React ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏ï‡πà‡∏•‡∏∞ element ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
                  key={item.id}
                  className="flex justify-between items-center text-sm sm:text-base"
                >
                  <div className="flex-grow">{item.name}</div>
                  <div className="flex items-center gap-2">
                    {/* Quantity dropdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏°‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
                    <select
                      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô dropdown ‡∏ï‡∏≤‡∏° state
                      value={item.quantity}
                      onChange={
                        (e) => handleQuantityChange(item.id, e.target.value) // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
                      }
                      className="border rounded p-1 text-sm"
                    >
                      {/* ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á option ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 1-10 */}
                      {[...Array(10).keys()].map((q) => (
                        <option key={q + 1} value={q + 1}>
                          {q + 1}
                        </option>
                      ))}
                    </select>
                    {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ä‡∏¥‡πâ‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÜ */}
                    <span>{item.price * item.quantity}‡∏ø</span>

                    {/* ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏à‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏ö‡∏ö‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å ‡∏Å‡πà‡∏≠‡∏ô place order */}
                    <button
                      type="button"
                      onClick={() => handleRemoveItem(item.id)}
                      className="text-gray-400 hover:text-amber-400 transition-colors p-1 rounded"
                    >
                      x
                    </button>
                  </div>
                </li>
              ))}
            </ul>
            <hr />

            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å delivery */}
            <div
              className={`flex justify-between font-medium ${
                orderMethod === "delivery" ? "" : "hidden"
              }`}
            >
              <span>Delivery Fee</span>
              <span>{deliveryFee}‡∏ø</span>
            </div>

            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ */}
            <div className="flex justify-between font-bold text-base sm:text-lg">
              <span>Subtotal</span>
              <span>{finalTotal}‡∏ø</span>
            </div>
          </div>
        </div>

        {/* Order Type Section ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
        <div>
          <h2 className="text-lg sm:text-xl font-semibold mb-2">
            üìç Order Type
          </h2>
          <div className="bg-[#F5F2EC] p-4 rounded-lg space-y-2">
            <div className="space-y-1">
              {/* Radio button ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dine-in */}
              <label className="flex items-center gap-2 p-2 rounded-lg cursor-pointer hover:bg-[#E6D9C2]">
                <input
                  type="radio"
                  name="method"
                  value="dinein"
                  checked={orderMethod === "dinein"} // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                  onChange={(e) => setOrderMethod(e.target.value)} // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô state
                  className="accent-[#9C9284]"
                />
                Dine-in
              </label>

              {/* Radio button ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Pick-up */}
              <label className="flex items-center gap-2 p-2 rounded-lg cursor-pointer hover:bg-[#E6D9C2]">
                <input
                  type="radio"
                  name="method"
                  value="pickup"
                  checked={orderMethod === "pickup"}
                  onChange={(e) => setOrderMethod(e.target.value)}
                  className="accent-[#9C9284]"
                />
                Pick-up at store
              </label>

              {/* Radio button ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Delivery */}
              <label className="flex items-center gap-2 p-2 rounded-lg cursor-pointer hover:bg-[#E6D9C2]">
                <input
                  type="radio"
                  name="method"
                  value="delivery"
                  checked={orderMethod === "delivery"}
                  onChange={(e) => setOrderMethod(e.target.value)}
                  className="accent-[#9C9284]"
                />
                Delivery
              </label>
            </div>

            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ user ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Delivery */}
            {orderMethod === "delivery" && (
              <div className="ml-6 space-y-0">
                <label className="flex items-center gap-2 py-1 px-2 rounded-lg cursor-pointer hover:bg-[#E6D9C2]">
                  <input
                    type="radio"
                    name="address-choice"
                    value="saved"
                    checked={addressChoice === "saved"}
                    onChange={(e) => setAddressChoice(e.target.value)}
                    className="accent-[#9C9284]"
                  />
                  <span className="text-sm">Use saved address</span>
                </label>
                <label className="flex items-center gap-2 py-1 px-2 rounded-lg cursor-pointer hover:bg-[#E6D9C2]">
                  <input
                    type="radio"
                    name="address-choice"
                    value="new"
                    checked={addressChoice === "new"}
                    onChange={(e) => setAddressChoice(e.target.value)}
                    className="accent-[#9C9284]"
                  />
                  <span className="text-sm">Create new address</span>
                </label>
              </div>
            )}
          </div>
        </div>

        {/* section customer information */}
        <div>
          <h2 className="text-lg sm:text-xl font-semibold mb-2">
            üë§ Customer Information
          </h2>
          <div className="bg-[#F5F2EC] p-4 rounded-lg">
            {/* ‡∏õ‡∏∏‡πà‡∏° Radio ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Details (Customer Info) */}
            <div className="flex gap-4 mb-4">
              <label className="flex items-center gap-2 py-1 px-2 rounded-lg cursor-pointer hover:bg-[#E6D9C2]">
                <input
                  type="radio"
                  name="profile-choice"
                  value="saved"
                  checked={profileChoice === "saved"}
                  onChange={(e) => setProfileChoice(e.target.value)}
                  className="accent-[#9C9284]"
                />
                Use saved details
              </label>
              <label className="flex items-center gap-2 py-1 px-2 rounded-lg cursor-pointer hover:bg-[#E6D9C2]">
                <input
                  type="radio"
                  name="profile-choice"
                  value="new"
                  checked={profileChoice === "new"}
                  onChange={(e) => setProfileChoice(e.target.value)}
                  className="accent-[#9C9284]"
                />
                Enter new details
              </label>
            </div>

            {/* input fields */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <input
                type="text"
                placeholder="First Name"
                className="border rounded-lg p-2 text-sm sm:text-base"
                value={customerInfo.firstName}
                onChange={
                  (e) =>
                    setCustomerInfo({
                      ...customerInfo, //‡πÉ‡∏ä‡πâ Spread Operator (...) ‡πÄ‡∏û‡∏∑‡πà‡∏≠ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Properties ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Object customerInfo ‡πÄ‡∏î‡∏¥‡∏°‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô Object ‡πÉ‡∏´‡∏°‡πà
                      firstName: e.target.value,
                    }) // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏Ñ‡πà firstName
                }
              />
              <input
                type="text"
                placeholder="Last Name"
                className="border rounded-lg p-2 text-sm sm:text-base"
                value={customerInfo.lastName}
                onChange={(e) =>
                  setCustomerInfo({ ...customerInfo, lastName: e.target.value })
                }
              />
              <input
                type="text"
                placeholder="Phone Number"
                className="border rounded-lg p-2 text-sm sm:text-base"
                value={customerInfo.phoneNumber}
                onChange={(e) =>
                  setCustomerInfo({
                    ...customerInfo,
                    phoneNumber: e.target.value,
                  })
                }
              />
              <input
                type="email"
                placeholder="Email"
                className="border rounded-lg p-2 text-sm sm:text-base"
                value={customerInfo.email}
                onChange={(e) =>
                  setCustomerInfo({ ...customerInfo, email: e.target.value })
                }
              />
            </div>
          </div>
        </div>

        {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á Delivery Address ‡∏à‡∏∞ pop up ‡∏°‡∏≤‡πÉ‡∏ï‡πâ Customer Information ‡πÄ‡∏°‡∏∑‡πà‡∏≠ user ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å order type ‡πÄ‡∏õ‡πá‡∏ô Delivery */}
        {orderMethod === "delivery" && ( // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏õ‡πá‡∏ô "delivery"
          <div>
            <h2 className="text-lg sm:text-xl font-semibold mb-2">
              üè† Delivery Address
            </h2>
            <div className="bg-[#F5F2EC] p-4 rounded-lg">
              <textarea
                className="w-full border rounded-lg p-2 text-sm sm:text-base"
                placeholder="Delivery Address (if applicable)"
                value={deliveryAddress} // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô textarea ‡∏ï‡∏≤‡∏° state
                onChange={(e) => setDeliveryAddress(e.target.value)} // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ user ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏°‡∏≤ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô state
              ></textarea>
            </div>
          </div>
        )}

        {/* Time & Note Section ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ */}
        <div>
          <h2 className="text-lg sm:text-xl font-semibold mb-2">
            üïí Time & Note
          </h2>
          <div className="bg-[#F5F2EC] p-4 rounded-lg">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {/* Dropdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ */}
              <select
                className="border rounded-lg p-2 text-sm sm:text-base"
                value={timeNote.time}
                onChange={
                  (e) => setTimeNote({ ...timeNote, time: e.target.value }) //‡πÉ‡∏ä‡πâ Spread Operator ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Properties ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Object timeNote ‡πÄ‡∏î‡∏¥‡∏°‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô Object ‡πÉ‡∏´‡∏°‡πà
                }
              >
                <option>Now</option>
                <option>In 15 minutes</option>
                <option>In 1 hour</option>
                <option>Custom Time</option>
              </select>

              {/* Input ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ */}
              <input
                type="text"
                placeholder="Note Ex. Pick up at 3 PM."
                className="border rounded-lg p-2 text-sm sm:text-base"
                value={timeNote.note}
                onChange={(e) =>
                  setTimeNote({ ...timeNote, note: e.target.value })
                }
              />
            </div>
          </div>
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
        <button
          type="submit" // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏° submit ‡∏Ç‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
          className="w-full sm:w-auto bg-[#472C03] text-[#FFFFFF] px-6 py-3 rounded-xl hover:bg-[#E6D9C2] hover:text-[#000000] hover:text-lg sm:hover:text-2xl hover:font-bold hover:scale-105 transition-all"
        >
          Place Order
        </button>
      </form>
    </div>
  );
};
